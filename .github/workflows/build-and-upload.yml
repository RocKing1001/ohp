name: Build and upload artifacts
on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [nightly]
        clang: [16]
        php: [8.3]
        phpts: [nts]
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
        env:
          phpts: ${{ matrix.phpts }}
          debug: false
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      - run: rustup show
      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2
        # if: matrix.rust == 'stable'
        with:
          # increment this manually to force cache eviction
          prefix-key: "v0-rust"
      # LLVM & Clang
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/llvm-${{ matrix.clang }}
          key: ubuntu-latest-llvm-${{ matrix.clang }}
      - name: Setup LLVM & Clang
        id: clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ matrix.clang }}
          directory: ${{ runner.temp }}/llvm-${{ matrix.clang }}
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - name: Configure Clang
        run: |
          echo "LIBCLANG_PATH=${{ runner.temp }}/llvm-${{ matrix.clang }}/lib" >> $GITHUB_ENV
          echo "LLVM_VERSION=${{ steps.clang.outputs.version }}" >> $GITHUB_ENV
          echo "LLVM_CONFIG_PATH=${{ runner.temp }}/llvm-${{ matrix.clang }}/bin/llvm-config" >> $GITHUB_ENV
      # Build
      - name: Build
        run: cargo build --release --verbose
      # Test & lint
      - name: Test inline examples
        run: cargo test --release --no-fail-fast
      - name: Run rustfmt
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --all -- -D warnings
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libohp-rust_${{matrix.rust}}-clang_${{matrix.clang}}-php_${{matrix.php}}_${{matrix.phpts}}
          path: target/release/libohp.so
